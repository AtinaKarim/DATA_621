gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
hist(baseball_no_cs$TEAM_PITCHING_SO[baseball_no_cs$TEAM_PITCHING_SO < 5000], breaks = 25)
hist(baseball_no_cs$TEAM_BATTING_SO)
hist(baseball_cs$TEAM_BATTING_SO)
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
hist(baseball_cs$TEAM_BATTING_SO)
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'))
colSums(is.na(baseball_df))
round(colSums(is.na(baseball_df))/nrow(baseball_df),2)
round(100*colSums(is.na(baseball_df))/nrow(baseball_df),2)
hist(baseball_df$TEAM_FIELDING_DP)
hist(baseball_df$TEAM_PITCHING_SO)
hist(baseball_df$TEAM_FIELDING_DP)
summary(baseball_df)
nrow(baseball_df)
summary(baseball_df)
nrow(baseball_df)
summary(baseball_df)
print('Number of observations:')
nrow(baseball_df)
print('Observations per year, 1871 - 2006:')
nrow(baseball_df)/(2006-1871)
summary(baseball_df)
print('Number of observations:')
nrow(baseball_df)
print('Observations per year, 1871 - 2006:')
round(nrow(baseball_df)/(2006-1871),2)
nrow(baseball_eval) / nrow(baseball_df)
nrow(baseball_eval) / (nrow(baseball_df) + nrow(baseball_eval))
(nrow(baseball_df) + nrow(baseball_eval))
baseball_no_hbp <- baseball_df %>%
filter(is.na(TEAM_BATTING_HBP)) %>% #missing values for hbp
select(-TEAM_BATTING_HBP)  ## select all rows except hbp
baseball_hbp <- baseball_df %>%
filter(!is.na(TEAM_BATTING_HBP)) #not missing values for hbp
sum(baseball_df$TEAM_BATTING_HBP > 0, na.rm = T)
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'))
corrplot(cor(baseball_hbp[,2:17], use = 'complete.obs'))
corrplot(cor(baseball_df[,-c(1,11)], use = 'complete.obs'))  #all rows
corrplot(cor(baseball_no_hbp[,2:16], use = 'complete.obs')) #only rows  missing values for hbp
corrplot(cor(baseball_hbp[,-c(1,11)], use = 'complete.obs')) #only rows with values for hbp
hbp_lm <- lm(baseball_hbp, formula = TARGET_WINS ~.-INDEX-TEAM_BATTING_HBP-TEAM_BATTING_SO-TEAM_BATTING_HR-TEAM_BASERUN_CS-TEAM_BATTING_H-TEAM_BASERUN_SB-TEAM_PITCHING_BB-TEAM_BATTING_2B-TEAM_BATTING_3B)
#hist(baseball_hbp$TARGET_WINS)
#summary(baseball_hbp$TARGET_WINS)
#sd(baseball_hbp$TARGET_WINS)
#summary(baseball_df$TARGET_WINS)
#sd(baseball_hbp$TARGET_WINS)
summary(hbp_lm)
baseball_hbp_dummy <- baseball_df %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-TEAM_BATTING_HBP)
#baseball_hbp_dummy
summary(lm(baseball_hbp_dummy, formula = TARGET_WINS ~.-INDEX-TEAM_PITCHING_BB-TEAM_PITCHING_HR-TEAM_BATTING_H))
sum(baseball_df$TEAM_BASERUN_CS == 0, na.rm = TRUE)
hist(baseball_df$TEAM_BASERUN_CS, breaks = 30)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_hbp %>%
select(-TEAM_BATTING_HBP) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_no_hbp %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_hbp %>%
select(-TEAM_BATTING_HBP) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_hbp %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_df_fix <- subset(baseball_df, select = -c(TEAM_BATTING_HBP,TEAM_BASERUN_CS, INDEX))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~  TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_lm)
baseball_interactions <- lm(baseball_df_fix, formula = TARGET_WINS ~ (TEAM_BATTING_H * TEAM_BATTING_2B + TEAM_BATTING_H * TEAM_BATTING_3B + TEAM_BATTING_H * TEAM_BATTING_HR))
summary(baseball_interactions)
baseball_dummies <- baseball_df_fix %>%
mutate(TEAM_PITCHING_HR_70 = case_when(TEAM_PITCHING_HR <= 70 ~ 1, TEAM_PITCHING_HR > 70 ~ 0)) %>%
mutate(TEAM_BATTING_SO_750 = case_when(TEAM_BATTING_SO  > 750 ~ 1, (TEAM_BATTING_SO  <= 750 | is.na(TEAM_BATTING_SO)) ~ 0)) %>%
mutate(TEAM_BATTING_HR_60 = case_when(TEAM_BATTING_HR  > 60 ~ 1, TEAM_BATTING_HR  <= 60 ~ 0))
baseball_lm2 <- lm(baseball_df_fix, formula = TARGET_WINS ~. +log(TEAM_FIELDING_E) +log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB) + TEAM_BATTING_3B:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR +  TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_H:TEAM_BATTING_3B- TEAM_BATTING_3B - TEAM_BATTING_SO - TEAM_BATTING_2B-TEAM_BATTING_BB-TEAM_BATTING_HR-TEAM_BATTING_H-TEAM_BATTING_HR- TEAM_PITCHING_HR)
summary(baseball_lm2)
colSums(is.na(baseball_eval))
baseball_vars <- baseball_eval %>%
select(TEAM_PITCHING_H, TEAM_PITCHING_HR, TEAM_FIELDING_DP, TEAM_BATTING_3B, TEAM_FIELDING_E, TEAM_PITCHING_BB, TEAM_PITCHING_SO, TEAM_BASERUN_SB, TEAM_BATTING_H, TEAM_BATTING_HR, TEAM_BATTING_2B)
eval_predict <- predict(baseball_interactions, newdata = baseball_eval)
hist(baseball_df$TARGET_WINS)
hist(eval_predict)
summary(eval_predict)
sd(eval_predict)
summary(baseball_df$TARGET_WINS)
sd(baseball_df$TARGET_WINS)
eval_predict2 <- predict(baseball_lm2, newdata = baseball_eval)
hist(baseball_df$TARGET_WINS, breaks = 40)
hist(eval_predict2)
summary(eval_predict2)
sd(eval_predict2, na.rm = T)
n_test <-nrow(baseball_eval)
n_train <- nrow(baseball_df)
summary(baseball_df$TARGET_WINS)
sd(baseball_df$TARGET_WINS)
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'))
corrplot(cor(baseball_hbp[,2:17], use = 'complete.obs'))
sum(baseball_df$TEAM_BASERUN_CS == 0, na.rm = TRUE)
hist(baseball_df$TEAM_BASERUN_CS, breaks = 30)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
sum(baseball_df$TEAM_BASERUN_CS == 0, na.rm = TRUE)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
sum(baseball_df$TEAM_BASERUN_CS == 0, na.rm = TRUE)
hist(baseball_df$TEAM_BASERUN_CS, breaks = 30)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_cs %>%
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_df %>% ##original histograms
keep(is.numeric) %>%
select(-TEAM_BASERUN_CS)
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_df %>% ##original histograms
keep(is.numeric) %>%
select(-TEAM_BASERUN_CS) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_boxplot()
baseball_cs %>% ##historgrams with seasons having CS statistics
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>% #histograms missing CS statistics
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_df %>% ##original histograms
keep(is.numeric) %>%
select(-TEAM_BASERUN_CS) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_cs %>% ##historgrams with seasons having CS statistics
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>% #histograms missing CS statistics
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_df %>% ##original histograms
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_cs %>% ##historgrams with seasons having CS statistics
select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
baseball_no_cs %>% #histograms missing CS statistics
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
ggplot() +
geom_histogram(baseball_df, aes(TEAM_PITCHING_HR))
ggplot(aes(value)) +
geom_histogram(baseball_df)
geom_histogram()
ggplot(baseball_df, aes(TEAM_PITCHING_HR) +
ggplot(baseball_df, aes(TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_df, aes(TEAM_PITCHING_HR)) +
ggplot(baseball_df, aes(TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(aes(TEAM_PITCHING_HR)) +
geom_histogram(baseball_df)
baseball_hbp_dummy <- baseball_df_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, col = TEAM_CS_YES_NO)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, colOR = TEAM_CS_YES_NO)) +
geom_histogram()
color
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_bar()
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, color = TEAM_CS_YES_NO)) +
geom_bar()
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR)) +
geom_bar()
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram()
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram()
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram()
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position_none)
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_SO)) +
geom_histogram()
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0')) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-c(TEAM_BATTING_HBP, INDEX))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~  TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_lm)
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
baseball_df_fix
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~. + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~. + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
colSums(baseball_df_fix)
colSums(is.na(baseball_df_fix))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~. + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR+ log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~. + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_DP + TEAM_BATTING_3B + log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
colSums(is.na(baseball_df_fix))
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0')) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-c(TEAM_BATTING_HBP, INDEX, TEAM_BASERUN_CS))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
summary(baseball_lm)
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0)) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-c(TEAM_BATTING_HBP, INDEX, TEAM_BASERUN_CS))
colSums(is.na(baseball_df_fix))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
summary(baseball_lm)
baseball_log_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_log_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B <- TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG <- TEAM_BATTING_1B + 2*TEAM_BATTING_2B + 3 * TEAM_BATTING_3B + 4 *TEAM_BATTING_HR)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B <- TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG <- TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B <- TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG <- TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_1B)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B <- TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG <- TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_1B)
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
baseball_df_fix
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_df_fix
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H)
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB)
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO)
summary(baseball_back_lm)
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0)) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-c(TEAM_BATTING_HBP, INDEX, TEAM_BASERUN_CS))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
summary(baseball_lm)
baseball_log_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_log_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO)
summary(baseball_back_lm)
baseball_interactions <- lm(baseball_df_fix, formula = TARGET_WINS ~ (TEAM_BATTING_H * TEAM_BATTING_2B + TEAM_BATTING_H * TEAM_BATTING_3B + TEAM_BATTING_H * TEAM_BATTING_HR))
summary(baseball_interactions)
baseball_lm2 <- lm(baseball_df_fix, formula = TARGET_WINS ~. +log(TEAM_FIELDING_E) +log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB) + TEAM_BATTING_3B:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR +  TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_H:TEAM_BATTING_3B- TEAM_BATTING_3B - TEAM_BATTING_SO - TEAM_BATTING_2B-TEAM_BATTING_BB-TEAM_BATTING_HR-TEAM_BATTING_H-TEAM_BATTING_HR- TEAM_PITCHING_HR)
summary(baseball_lm2)
colSums(is.na(baseball_eval))
baseball_vars <- baseball_eval %>%
select(TEAM_PITCHING_H, TEAM_PITCHING_HR, TEAM_FIELDING_DP, TEAM_BATTING_3B, TEAM_FIELDING_E, TEAM_PITCHING_BB, TEAM_PITCHING_SO, TEAM_BASERUN_SB, TEAM_BATTING_H, TEAM_BATTING_HR, TEAM_BATTING_2B)
eval_predict <- predict(baseball_interactions, newdata = baseball_eval)
hist(baseball_df$TARGET_WINS)
hist(eval_predict)
summary(eval_predict)
sd(eval_predict)
summary(baseball_df$TARGET_WINS)
sd(baseball_df$TARGET_WINS)
eval_predict2 <- predict(baseball_lm2, newdata = baseball_eval)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) -TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO)
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR)
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR-TEAM_PITCHING_BB)
summary(baseball_back_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR-TEAM_PITCHING_BB-TEAM_FIELDING_E-TEAM)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR-TEAM_PITCHING_BB-TEAM_FIELDING_E)
summary(baseball_back_lm)
hist(baseball_df$TEAM_BASERUN_SB)
boxcox(baseball_df$TEAM_BASERUN_SB)
library(boxcox)
install.packages("boxcox")
boxCox(baseball_df$TEAM_BASERUN_SB)
install.packages("boxCox")
install.packages("AID")
library(AID)
boxcoxlm(baseball_df$TEAM_BASERUN_SB)
boxcoxlm(baseball_df)
boxcoxlm(baseball_df$TEAM_bASERUN_SB, baseball_df$TARGET_WINS)
library(MASS)
boxcox(baseball_df$TEAM_BASERUN_SB)
boxcox(baseball_vars_lm)
