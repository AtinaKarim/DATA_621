mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ '1', is.na(TEAM_BASERUN_CS) ~ '0'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_SO)) +
geom_histogram()
# Devin - start- baseball_df_fix not defined yet - did you want to move to after? I added the code here just so it wouldn't error out
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0)) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
dplyr::select(-c(TEAM_BATTING_HBP, INDEX, TEAM_BASERUN_CS))
# Devin - end- baseball_df_fix not defined yet - did you want to move to after? I added the code here just so it wouldn't error out
#Devin - still erroring out?
#image(is.na(baseball_df_fix),axes=FALSE,col=gray(1:0))
#axis(2, at=0:17/17, labels=colnames(baseball_df_fix))
#axis(1, at=0:2275/2275, labels=row.names(baseball_df_fix),las=2)
baseball_df_fix[rowSums(is.na(baseball_df_fix)) > 0,] %>%
dplyr::select(TEAM_PITCHING_SO, TEAM_FIELDING_DP, TEAM_BATTING_SO, TEAM_BASERUN_SB)
summary( lm(baseball_df_fix, formula = TEAM_BATTING_SO ~.-TARGET_WINS))
summary( lm(baseball_df_fix, formula = TEAM_PITCHING_SO ~.-TARGET_WINS))
baseball_df%>%
dplyr::filter(TEAM_PITCHING_SO < 5)
baseball_df%>%
dplyr::filter(TEAM_BATTING_SO < 5)
baseball_df %>%
dplyr::select(TEAM_BASERUN_CS, TEAM_BASERUN_SB) %>%
filter(is.na(TEAM_BASERUN_SB))
hist(baseball_df$TEAM_BASERUN_SB)
hist(log(baseball_df$TEAM_BASERUN_SB))
baseball_log_sb <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_SB)) %>%
filter(TEAM_BASERUN_SB != 0) %>%
mutate(LOG_BASERUN_SB = log(TEAM_BASERUN_SB))
qqnorm((baseball_log_sb$LOG_BASERUN_SB))
qqline((baseball_log_sb$LOG_BASERUN_SB))
baseball_df_fix %>%
filter(is.na(TEAM_FIELDING_DP))
baseball_df_na_dp <- baseball_df_fix %>%
filter(!is.na(TEAM_FIELDING_DP))
summary(lm(baseball_df_na_dp, formula = TEAM_FIELDING_DP~.-TARGET_WINS))
corrplot(cor(baseball_df_na_dp, use = 'complete.obs'))
hist(baseball_df$TEAM_FIELDING_DP)
qqnorm(baseball_df$TEAM_FIELDING_DP)
qqline(baseball_df$TEAM_FIELDING_DP)
baseball_df_fix <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0)) %>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
dplyr::select(-c(TEAM_BATTING_HBP, INDEX, TEAM_BASERUN_CS))
baseball_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.)
summary(baseball_lm)
baseball_log_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_log_lm)
baseball_df_fix <- baseball_df_fix %>%
mutate(TEAM_BATTING_1B = TEAM_BATTING_H - TEAM_BATTING_2B - TEAM_BATTING_3B - TEAM_BATTING_HR) %>%
mutate(TEAM_BATTING_SLG = (TEAM_BATTING_H + TEAM_BATTING_2B + 2 * TEAM_BATTING_3B + 3 *TEAM_BATTING_HR)/TEAM_BATTING_H) ## direct calculation of SLG from TEAM_BATTING_H, which contains 1B + 2B + 3B + Hr
baseball_vars_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB))
summary(baseball_vars_lm)
baseball_back_lm <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO) + log(TEAM_BASERUN_SB)-TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR-TEAM_PITCHING_BB-TEAM_FIELDING_E)
summary(baseball_back_lm)
m1 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_HR +TEAM_BATTING_BB + TEAM_BATTING_SO  + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_PITCHING_BB + TEAM_PITCHING_SO + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_CS_YES_NO,data = baseball_df_fix)
summary(m1)
#remove TEAM_PITCHING_BB & TEAM_PITCHING_SO
m2<- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_HR +TEAM_BATTING_BB + TEAM_BATTING_SO  + TEAM_PITCHING_H + TEAM_PITCHING_HR + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_CS_YES_NO,data = baseball_df_fix)
summary(m2)
anova(m1, m2)
par(mfrow=c(2,1))
plot(baseball_df_fix$TEAM_PITCHING_H,baseball_df_fix$TARGET_WINS,xlab = 'TEAM_PITCHING',ylab = 'TARGET_WINS',main= 'Team Pitching H vs. Target Wins')
plot(log(baseball_df_fix$TEAM_PITCHING_H),baseball_df_fix$TARGET_WINS,xlab = 'LOG(TEAM_PITCHING)',ylab = 'TARGET_WINS')
#log TEAM_PITCHING_H
m3 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_HR +TEAM_BATTING_BB + TEAM_BATTING_SO  + log(TEAM_PITCHING_H) + TEAM_PITCHING_HR + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_CS_YES_NO,data = baseball_df_fix)
summary(m3)
#Remove TEAM_BATTING_H
m4 <- lm(TARGET_WINS ~ TEAM_BATTING_HR +TEAM_BATTING_BB + TEAM_BATTING_SO  + log(TEAM_PITCHING_H) + TEAM_PITCHING_HR + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_CS_YES_NO,data = baseball_df_fix)
summary(m4)
anova(m3, m4)
baseball_interactions <- lm(baseball_df_fix, formula = TARGET_WINS ~ (TEAM_BATTING_H * TEAM_BATTING_2B + TEAM_BATTING_H * TEAM_BATTING_3B + TEAM_BATTING_H * TEAM_BATTING_HR))
summary(baseball_interactions)
baseball_lm2 <- lm(baseball_df_fix, formula = TARGET_WINS ~.-TEAM_BATTING_1B+log(TEAM_FIELDING_E) + log(TEAM_PITCHING_BB) + log(TEAM_PITCHING_SO)- TEAM_BATTING_SLG-TEAM_PITCHING_H-TEAM_BATTING_BB-TEAM_BATTING_SO-TEAM_PITCHING_HR-TEAM_PITCHING_BB-TEAM_FIELDING_E+log(TEAM_FIELDING_E) +log(TEAM_PITCHING_SO) + TEAM_BATTING_3B:TEAM_BATTING_HR + TEAM_BATTING_2B:TEAM_BATTING_HR +  TEAM_BATTING_H:TEAM_BATTING_HR + TEAM_BATTING_H:TEAM_BATTING_3B- TEAM_BATTING_3B - TEAM_BATTING_SO - TEAM_BATTING_2B-TEAM_BATTING_BB-TEAM_BATTING_HR-TEAM_BATTING_H-TEAM_BATTING_HR- TEAM_PITCHING_HR)
summary(baseball_lm2)
med <- baseball_df_fix %>%
mutate_all(~ifelse(is.na(.), median(., na.rm = TRUE), .))
nonnacols <- baseball_df_fix[complete.cases(baseball_df_fix),]
nonnacols <- nonnacols %>%
dplyr::select(INDEX, TEAM_BATTING_SO, TEAM_BASERUN_SB, TEAM_PITCHING_SO, TEAM_FIELDING_DP)
knitr::opts_chunk$set(echo=FALSE, error=FALSE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(echo=TRUE, eval=FALSE)
round(100*colSums(is.na(baseball_eval))/nrow(baseball_eval),2)
eval_predict <-  predict(baseball_lm2, newdata = baseball_eval, interval="prediction")
RSS <- c(crossprod(lmod3$residuals))
# Libraries
library(dplyr)
library(GGally)
library(DataExplorer)
library(ggplot2)
library(readr)
library(reshape2)
library(purrr)
library(tidyr)
library(corrplot)
library(MASS)
library(caret)
library(Hmisc)
knitr::opts_chunk$set(echo = TRUE)
hist(baseball_df$TEAM_BATTING_HR)
hist(baseball_df$TEAM_BATTING_SO)
hist(baseball_df$TEAM_PITCHING_HR)
baseball_df %>% ##original histograms
dplyr::select(-TEAM_BASERUN_CS) %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
library(dplyr)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
dplyr::select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
library(ggplot2)
hist(baseball_hbp_dummy$TEAM_PITCHING_HR)
hist(BASEBALL-DF$TEAM_PITCHING_HR)
ggplot(baseball_hbp_dummy, aes(length, fill = TEAM_CS_YES_NO)) +
geom_density()
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR fill = TEAM_CS_YES_NO)) +
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_density()
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_density(alpha = 0.4)
geom_title('Team Pitching Home Runs, separated by CS statistic)
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_density(alpha = 0.4) +
geom_title('Team Pitching Home Runs, separated by CS statistic')
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_title('Team Pitching Home Runs, separated by CS statistic')
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_title('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
title('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Strike Outs, separated by CS statistic') +
geom_density(alpha = 0.4)
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 1], baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 0])
baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 1]
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_BATTING_HR')
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_PITCHING_HR')
t.test(baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_BATTING_SO')
t.test(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
install.packages("mixtools")
library(mixtools)
baseball_so_params <- t.test(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'],
sd_so_record
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record']
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'])
sd_so_no_record - sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_record
sd_so_no_record
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'], na.rm = TRUE)
sd_so_record
sd_so_no_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO, lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_no_record,sd_so_record))
sd_so_no_record
sd_so_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO[!is.na(baseball_df$TEAM_BATTING_SO)], lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_no_record,sd_so_record))
plot(batting_so_mix)
plot(batting_so_mix, density = TRUE)
plot(batting_so_mix, density = TRUE)
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'])
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'], na.rm = TRUE)
sd_so_record
sd_so_no_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO[!is.na(baseball_df$TEAM_BATTING_SO)], lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_record, sd_so_no_record))
plot(batting_so_mix, density = TRUE)
batting_so_mix$all.loglik
batting_so_mix$posterior
round(batting_so_mix$posterior,3)
mutate(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior[2],3)
baseball_df[head]
head(baseball_df)
baseball_df <- baseball_df %>%
mutate(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior[2],3))
head(baseball_df)
batting_so_mix$posterior
batting_so_mix$posterior['comp.2']
nrow(batting_so_mix$posterior)
nrow(baseball_df)
nrow(baseball_df, na.rm = TRUE)
nrow(!is.na(baseball_df$TEAM_BATTING_SO))
rowSums(!is.na(baseball_df$TEAM_BATTING_SO)
rowSum(!is.na(baseball_df$TEAM_BATTING_SO)
sum(!is.na(baseball_df$TEAM_BATTING_SO)
(!is.na(baseball_df$TEAM_BATTING_SO))
!is.na(baseball_df$TEAM_BATTING_SO)
is.na(baseball_df$TEAM_BATTING_SO)
sum(is.na(baseball_df$TEAM_BATTING_SO)
)
head(baseball_df)
nrow(batting_so_mix$posterior)
baseball_df <- baseball_df %>%
filter(is.na(TEAM_BATTING_SO)) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior,3))
baseball_df <- baseball_df %>%
select(is.na(TEAM_BATTING_SO)) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior,3))
baseball-df
baseball_df
baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior,3))
library(tidyr)
baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior,3))
baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior.comp2,3))
baseball_test <- batting_so_mix$posterior
View(baseball_test)
baseball_test <- batting_so_mix$posterior[,2]
baseball_test
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(mixtools)
library(tidyr)
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
hist(baseball_df$TEAM_BATTING_HR)
hist(baseball_df$TEAM_BATTING_SO)
hist(baseball_df$TEAM_PITCHING_HR)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
dplyr::select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_SO)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Strike Outs, separated by CS statistic') +
geom_density(alpha = 0.4)
print('TEAM_BATTING_HR')
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_PITCHING_HR')
t.test(baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_BATTING_SO')
t.test(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'])
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'], na.rm = TRUE)
sd_so_record
sd_so_no_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO[!is.na(baseball_df$TEAM_BATTING_SO)], lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_record, sd_so_no_record))
plot(batting_so_mix, density = TRUE)
baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB = round(batting_so_mix$posterior[,2],3))
baseball_df
nrow(batting_so_mix$posterior)
sum(is.na(baseball_df$TEAM_BATTING_SO))
head(baseball_df)
lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS)
head(basebal_df)
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(TEAM_BATTING_SO_BIMODAL_PROB <- round(batting_so_mix$posterior[,2],3))
head(basebal_df)
head(baseball_df)
lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS)
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3))
head(baseball_df)
lm(baseball_df, formula = round(batting_so_mix$posterior[, 2], 3) ~. - INDEX - TARGET_WINS)
lm(baseball_df, formula = 'round(batting_so_mix$posterior[, 2], 3)' ~. - INDEX - TARGET_WINS)
baseball_df
library(dplyr)
library(ggplot2)
library(mixtools)
library(tidyr)
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
hist(baseball_df$TEAM_BATTING_HR)
hist(baseball_df$TEAM_BATTING_SO)
hist(baseball_df$TEAM_PITCHING_HR)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
dplyr::select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
baseball_hbp_dummy <- baseball_hbp_dummy %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
ggplot(baseball_hbp_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_HR)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_hbp_dummy, aes(x = TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_SO)) +
geom_histogram()
ggplot(baseball_hbp_dummy, aes(TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Strike Outs, separated by CS statistic') +
geom_density(alpha = 0.4)
print('TEAM_BATTING_HR')
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_PITCHING_HR')
t.test(baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_BATTING_SO')
t.test(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has CS record'])
sd_so_no_record <- sd(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'], na.rm = TRUE)
sd_so_record
sd_so_no_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO[!is.na(baseball_df$TEAM_BATTING_SO)], lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_record, sd_so_no_record))
plot(batting_so_mix, density = TRUE)
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) >%%
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
renameround('TEAM_BATTING_SO_BIMODAL_PROB' = 'batting_so_mix$posterior[, 2], 3')
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3')
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)')
baseball_df
lm(baseball_df, formula = 'round(batting_so_mix$posterior[, 2], 3)' ~. - INDEX - TARGET_WINS)
baseball_df
lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS)
bimodal_lm <- lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS)
bimodal_lm
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS)
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS))
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)') %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
baseball_df <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
```{r, bimodal-lm}
baseball-df
baseball_df
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)') %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS))
baseball_df
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)') %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))%>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-TEAM_HBP_YES_NO)
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)') %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))%>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-TEAM_HBP_YES_NO)
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS))
baseball_df
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
baseball_df <- baseball_df %>%
drop_na(TEAM_BATTING_SO) %>%
cbind(round(batting_so_mix$posterior[,2],3)) %>%
rename('TEAM_BATTING_SO_BIMODAL_PROB' = 'round(batting_so_mix$posterior[, 2], 3)') %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 1, is.na(TEAM_BASERUN_CS) ~ 0))%>%
mutate(TEAM_HBP_YES_NO = case_when(!is.na(TEAM_BATTING_HBP) ~ 1, is.na(TEAM_BATTING_HBP) ~ 0)) %>%
select(-TEAM_BATTING_HBP)
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO-TEAM_BATTING_CS))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO-TEAM_BASERUN_CS))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO-TEAM_CS_YES_NO))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_S))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_S0))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_S0))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO-TEAM_PITCHING_SO))
summary(lm(baseball_df, formula = TEAM_BATTING_SO_BIMODAL_PROB ~. - INDEX - TARGET_WINS-TEAM_BATTING_SO))
baseball_cs_dummy <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
ggplot(baseball_cs_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_cs_dummy, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(mixtools)
library(tidyr)
baseball_df <- read.csv('https://raw.githubusercontent.com/hillt5/DATA_621/master/HW1/moneyball-training-data.csv')
hist(baseball_df$TEAM_BATTING_HR)
hist(baseball_df$TEAM_BATTING_SO)
hist(baseball_df$TEAM_PITCHING_HR)
baseball_no_cs <- baseball_df %>%
filter(is.na(TEAM_BASERUN_CS)) %>% #missing values for hbp
dplyr::select(-TEAM_BASERUN_CS)  ## select all rows except hbp
baseball_cs <- baseball_df %>%
filter(!is.na(TEAM_BASERUN_CS)) #not missing values for hbp
baseball_cs_dummy <- baseball_df %>%
mutate(TEAM_CS_YES_NO = case_when(!is.na(TEAM_BASERUN_CS) ~ 'Has CS record', is.na(TEAM_BASERUN_CS) ~ 'Has no CS record'))
ggplot(baseball_cs_dummy, aes(x = TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_cs_dummy, aes(x = TEAM_PITCHING_HR)) +
geom_histogram()
ggplot(baseball_cs_dummy, aes(TEAM_PITCHING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Pitching Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_cs_dummy, aes(x = TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_HR)) +
geom_histogram()
ggplot(baseball_cs_dummy, aes(TEAM_BATTING_HR, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Home Runs, separated by CS statistic') +
geom_density(alpha = 0.4)
ggplot(baseball_cs_dummy, aes(x = TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
geom_histogram() +
theme(legend.position = 'none')
ggplot(baseball_df, aes(x = TEAM_BATTING_SO)) +
geom_histogram()
ggplot(baseball_cs_dummy, aes(TEAM_BATTING_SO, fill = TEAM_CS_YES_NO)) +
ggtitle('Team Batting Strike Outs, separated by CS statistic') +
geom_density(alpha = 0.4)
print('TEAM_BATTING_HR')
t.test(baseball_hbp_dummy$TEAM_BATTING_HR[baseball_cs_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_cs_dummy$TEAM_BATTING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_PITCHING_HR')
t.test(baseball_hbp_dummy$TEAM_PITCHING_HR[baseball_cs_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_cs_dummy$TEAM_PITCHING_HR[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
print('TEAM_BATTING_SO')
t.test(baseball_hbp_dummy$TEAM_BATTING_SO[baseball_cs_dummy$TEAM_CS_YES_NO == 'Has CS record'], baseball_cs_dummy$TEAM_BATTING_SO[baseball_hbp_dummy$TEAM_CS_YES_NO == 'Has no CS record'])
sd_so_record <- sd(baseball_cs_dummy$TEAM_BATTING_SO[baseball_cs_dummy$TEAM_CS_YES_NO == 'Has CS record'])
sd_so_no_record <- sd(baseball_cs_dummy$TEAM_BATTING_SO[baseball_cs_dummy$TEAM_CS_YES_NO == 'Has no CS record'], na.rm = TRUE)
sd_so_record
sd_so_no_record
batting_so_mix <- normalmixEM(baseball_df$TEAM_BATTING_SO[!is.na(baseball_df$TEAM_BATTING_SO)], lambda = 0.5, mu = c(517.1955, 832.9023), sigma = c(sd_so_record, sd_so_no_record))
plot(batting_so_mix, density = TRUE)
